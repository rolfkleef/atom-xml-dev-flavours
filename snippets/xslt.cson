# XSLT developer snippets

'.text.xml.xsl':

  'XSLT namespace':
    'prefix': 'xmlns:xsl=...'
    'body': 'xmlns:xsl="http://www.w3.org/1999/XSL/Transform"'

  'functx namespace':
    'prefix': 'xmlns:functx=...'
    'body': 'xmlns:functx="http://www.functx.com"'

  'xsl:stylesheet':
    'prefix': 'stylesheet'
    'body': """
      <xsl:stylesheet version='2.0' xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
        xmlns:xs="http://www.w3.org/2001/XMLSchema"$1>

        $2
      </xsl:stylesheet>
    """

  'xsl:template':
    'prefix': 'template match'
    'body': """
      <xsl:template match="$1">
        $2
      </xsl:template>
    """

  'xsl:template (named)':
    'prefix': 'template name'
    'body': """
      <xsl:template name="$1">
        $2
      </xsl:template>
    """

  'xsl:apply-templates':
    'prefix': 'apply-templates'
    'body': '<xsl:apply-templates select="$1"/>$2'

  'xsl:call-template':
    'prefix': 'call-template'
    'body': """
      <xsl:call-template name="$1">
        <xsl:with-param name="$2" select="$3"/>$4
      </xsl:call-template>
    """

  'xsl:with-param':
    'prefix': 'with-param select'
    'body': '<xsl:with-param name="$1" select="$2"/>$3'

  'xsl:with-param (long)':
    'prefix': 'with-param inline'
    'body': '<xsl:with-param name="$1">$2</xsl:with-param>$3'

  'xsl:param':
    'prefix': 'param name'
    'body': '<xsl:param name="$1" select="$2"/>$3'

  'xsl:param (long)':
    'prefix': 'param inline'
    'body': '<xsl:param name="$1">$2</xsl:param>$3'

  'xsl:attribute':
    'prefix': 'attribute'
    'body': """
      <xsl:attribute name="$1" select="$2"/>$3
    """

  'xsl:value-of':
    'prefix': 'value-of'
    'body': '<xsl:value-of select="$1"/>$2'

  'xsl:for-each':
    'prefix': 'for-each'
    'body': """
      <xsl:for-each select="$1">
        $2
      </xsl:for-each>
    """

  'xsl:for-each-group':
    'prefix': 'for-each-group'
    'body': """
      <xsl:for-each-group select="$1" group-by="$2">
        $3
      </xsl:for-each-group>
    """

  'xsl:choose':
    'prefix': 'choose'
    'body': """
      <xsl:choose>
        <xsl:when test="$1">$2</xsl:when>
        <xsl:otherwise>$3</xsl:otherwise>
      </xsl:choose>$4
    """

  'xsl:if':
    'prefix': 'if'
    'body': """
      <xsl:if test="$1">
        $2
      </xsl:if>
    """

  'xsl:sort':
    'prefix': 'sort'
    'body': """
      <xsl:sort select="$1" data-type="text$2" order="ascending$3"/>
    """

  'xsl:perform-sort':
    'prefix': 'perform-sort'
    'body': """
      <xsl:perform-sort select="$1">
        <xsl:sort select="$2" data-type="text$3" order="ascending$4"/>
      </xsl:perform-sort>
    """

  'xsl:variable':
    'prefix': 'variable'
    'body': '<xsl:variable name="$1" select="$2"/>$3'

  'xsl:sequence':
    'prefix': 'sequence'
    'body': """
      <xsl:sequence>
        $1
      </xsl:sequence>
    """

  'xsl:text':
    'prefix': 'text'
    'body': """
      <xsl:text>$1</xsl:text>
    """

  'xsl:message':
    'prefix': 'message'
    'body': """
      <xsl:message>$1</xsl:message>
    """

  # Generic <xsl:tag>...</xsl:tag>
  'xsl:tag':
    'prefix': '<xsl'
    'body': '<xsl:${1:tag}>$2</xsl:${1:tag}>'
